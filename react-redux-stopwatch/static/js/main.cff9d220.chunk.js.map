{"version":3,"sources":["features/timers/timersSlice.js","features/timers/AddTimerForm.js","features/timers/TimerList.js","helpers/helper.js","App.js","app/store.js","index.js"],"names":["timerStarted","createAsyncThunk","timerId","thunkAPI","intervalId","setInterval","dispatch","timerTick","timersStartedAfterLoad","args","getState","timers","map","timer","stop","id","timersSlice","createSlice","name","initialState","reducers","timerAdded","state","action","unshift","payload","timersAddedFromStorage","timerRemoved","timerIdx","findIndex","splice","timerStopped","find","seconds","minutes","hours","extraReducers","fulfilled","forEach","timerWithInterval","actions","AddTimerForm","useState","timerName","setTimerName","useDispatch","onSubmit","e","preventDefault","Math","random","tzoffset","Date","getTimezoneOffset","dateTemplate","now","toISOString","split","slice","className","type","placeholder","value","onChange","target","trim","TimerList","useSelector","useEffect","beforeunload","hrs","min","sec","modifiedTimer","timestampAdded","miliseconds","parseInt","localStorage","setItem","JSON","stringify","window","addEventListener","removeEventListener","load","loadedTimers","Object","keys","key","loadedTimer","parse","getItem","difference","convertedMsToTime","duration","floor","msToTime","clear","onClick","clearInterval","startOrStopTimer","remove","App","configureStore","reducer","timersReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.cff9d220.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [];\r\n\r\nexport const timerStarted = createAsyncThunk(\r\n  \"timers/timerStarted\",\r\n  (timerId, thunkAPI) => {\r\n    const intervalId = setInterval(\r\n      () => thunkAPI.dispatch(timerTick(timerId)),\r\n      1000\r\n    );\r\n\r\n    return { intervalId, timerId };\r\n  }\r\n);\r\n\r\nexport const timersStartedAfterLoad = createAsyncThunk(\r\n  \"timers/timersStartedAfterLoad\",\r\n  (args, thunkAPI) => {\r\n    const { timers } = thunkAPI.getState();\r\n    const timersWithInterval = timers.map((timer) => {\r\n      let intervalId;\r\n      if (!timer.stop) {\r\n        intervalId = setInterval(\r\n          () => thunkAPI.dispatch(timerTick(timer.id)),\r\n          1000\r\n        );\r\n      }\r\n      return { timerId: timer.id, intervalId };\r\n    });\r\n    return timersWithInterval;\r\n  }\r\n);\r\n\r\nconst timersSlice = createSlice({\r\n  name: \"timers\",\r\n  initialState,\r\n  reducers: {\r\n    timerAdded(state, action) {\r\n      state.unshift(action.payload);\r\n    },\r\n    timersAddedFromStorage(state, action) {\r\n      state.unshift(...action.payload);\r\n    },\r\n    timerRemoved(state, action) {\r\n      const timerIdx = state.findIndex((timer) => timer.id === action.payload);\r\n      state.splice(timerIdx, 1);\r\n    },\r\n    timerStopped(state, action) {\r\n      const timer = state.find((timer) => timer.id === action.payload);\r\n      timer.stop = !timer.stop;\r\n      timer.intervalId = null;\r\n    },\r\n    timerTick(state, action) {\r\n      const timer = state.find((timer) => timer.id === action.payload);\r\n      timer.seconds = ++timer.seconds;\r\n      if (timer.seconds < 10) {\r\n        timer.seconds = \"0\" + timer.seconds;\r\n      }\r\n      if (timer.seconds > 59) {\r\n        timer.seconds = \"00\";\r\n        timer.minutes = ++timer.minutes;\r\n        if (timer.minutes < 10) {\r\n          timer.minutes = \"0\" + timer.minutes;\r\n        }\r\n        if (timer.minutes > 59) {\r\n          timer.minutes = \"00\";\r\n          timer.hours = ++timer.hours;\r\n          if (timer.hours < 10) {\r\n            timer.hours = \"0\" + timer.hours;\r\n          }\r\n        }\r\n      }\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [timerStarted.fulfilled]: (state, action) => {\r\n      const { intervalId, timerId } = action.payload;\r\n      const timer = state.find((timer) => timer.id === timerId);\r\n      timer.stop = !timer.stop;\r\n      timer.intervalId = intervalId;\r\n    },\r\n    [timersStartedAfterLoad.fulfilled]: (state, action) => {\r\n      action.payload.forEach((timerWithInterval) => {\r\n        const { timerId, intervalId } = timerWithInterval;\r\n        const timer = state.find((timer) => timer.id === timerId);\r\n        timer.intervalId = intervalId;\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  timerAdded,\r\n  timerStopped,\r\n  timerTick,\r\n  timerRemoved,\r\n  timersAddedFromStorage,\r\n} = timersSlice.actions;\r\n\r\nexport default timersSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { timerAdded, timerStarted } from \"./timersSlice\";\r\n\r\nexport const AddTimerForm = () => {\r\n  const [timerName, setTimerName] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const timer = {\r\n      id: Math.random(),\r\n      stop: true,\r\n      hours: \"00\",\r\n      minutes: \"00\",\r\n      seconds: \"00\",\r\n    };\r\n    // Если инпут пустой имя формируется на основе даты\r\n    if (timerName) {\r\n      timer.timerName = timerName;\r\n    } else {\r\n      const tzoffset = new Date().getTimezoneOffset() * 60000; //offset in milliseconds\r\n      const dateTemplate = new Date(Date.now() - tzoffset)\r\n        .toISOString()\r\n        .split(\"T\");\r\n      timer.timerName = `${dateTemplate[0]} ${dateTemplate[1].slice(0, -5)}`;\r\n    }\r\n\r\n    dispatch(timerAdded(timer));\r\n    dispatch(timerStarted(timer.id));\r\n    setTimerName(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"tracker-form\">\r\n      <div className=\"input__wrapper\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"tracker-form__input\"\r\n          placeholder=\"Enter tracker name\"\r\n          value={timerName}\r\n          onChange={(e) => setTimerName(e.target.value.trim())}\r\n        ></input>\r\n        <button type=\"submit\" className=\"tracker-form__submit\">\r\n          <span className=\"material-icons\">play_arrow</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  timerStarted,\r\n  timerStopped,\r\n  timerRemoved,\r\n  timersStartedAfterLoad,\r\n  timersAddedFromStorage,\r\n} from \"./timersSlice\";\r\n\r\nimport { miliseconds, msToTime } from \"../../helpers/helper\";\r\n\r\nexport const TimerList = () => {\r\n  const timers = useSelector((state) => state.timers);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const beforeunload = () => {\r\n      timers.forEach((timer) => {\r\n        const modifiedTimer = {\r\n          ...timer,\r\n          timestampAdded: Date.now(),\r\n        };\r\n        modifiedTimer.miliseconds = miliseconds(\r\n          timer.hours,\r\n          timer.minutes,\r\n          timer.seconds\r\n        );\r\n        localStorage.setItem(timer.id, JSON.stringify(modifiedTimer));\r\n      });\r\n    };\r\n    window.addEventListener(\"beforeunload\", beforeunload);\r\n\r\n    return () => window.removeEventListener(\"beforeunload\", beforeunload);\r\n  }, [timers]);\r\n\r\n  useEffect(() => {\r\n    const load = () => {\r\n      const loadedTimers = Object.keys(localStorage).map((key) => {\r\n        let loadedTimer = JSON.parse(localStorage.getItem(key));\r\n        const difference = Date.now() - loadedTimer.timestampAdded;\r\n\r\n        const convertedMsToTime = msToTime(\r\n          loadedTimer.miliseconds + difference\r\n        );\r\n\r\n        delete loadedTimer.timestampAdded;\r\n        delete loadedTimer.miliseconds;\r\n        loadedTimer = {\r\n          ...loadedTimer,\r\n          hours: loadedTimer.stop ? loadedTimer.hours : convertedMsToTime.hours,\r\n          minutes: loadedTimer.stop\r\n            ? loadedTimer.minutes\r\n            : convertedMsToTime.minutes,\r\n          seconds: loadedTimer.stop\r\n            ? loadedTimer.seconds\r\n            : convertedMsToTime.seconds,\r\n        };\r\n\r\n        return loadedTimer;\r\n      });\r\n      dispatch(timersAddedFromStorage(loadedTimers));\r\n      dispatch(timersStartedAfterLoad());\r\n      localStorage.clear();\r\n    };\r\n    window.addEventListener(\"load\", load);\r\n\r\n    return () => window.removeEventListener(\"load\", load);\r\n  }, [dispatch]);\r\n\r\n  const startOrStopTimer = (timerId) => {\r\n    const timer = timers.find((timer) => timer.id === timerId);\r\n    if (timer.stop) {\r\n      dispatch(timerStarted(timerId));\r\n    } else {\r\n      const { intervalId } = timer;\r\n      clearInterval(intervalId);\r\n      dispatch(timerStopped(timerId));\r\n    }\r\n  };\r\n\r\n  const remove = (timerId) => {\r\n    const { intervalId } = timers.find((timer) => timer.id === timerId);\r\n    clearInterval(intervalId);\r\n    // dispatch(action(timerId))\r\n    dispatch(timerRemoved(timerId));\r\n  };\r\n\r\n  return (\r\n    <section className=\"timers-list\">\r\n      <ul>\r\n        {timers.map(({ id, timerName, hours, minutes, seconds, stop }) => (\r\n          <li key={id} className={`timers-list__item ${stop ? \"\" : \"active\"}`}>\r\n            <span className=\"timers-list__item-name\">{timerName}</span>\r\n            <div className=\"timers_list__btn-block\">\r\n              <span className=\"timers-list__item-value\">{`${hours}:${minutes}:${seconds}`}</span>\r\n              <button\r\n                className=\"btn-round\"\r\n                onClick={() => startOrStopTimer(id)}\r\n              >\r\n                <span className=\"material-icons\">\r\n                  {stop ? \"play_circle_outline\" : \"pause_circle_outline\"}\r\n                </span>\r\n              </button>\r\n              <button\r\n                className=\"btn-round btn-round_remove\"\r\n                onClick={() => remove(id)}\r\n              >\r\n                <span className=\"material-icons\">remove_circle_outline</span>\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n","export const msToTime = (duration) => {\r\n  let seconds = Math.floor((duration / 1000) % 60),\r\n    minutes = Math.floor((duration / (1000 * 60)) % 60),\r\n    hours = Math.floor(duration / (1000 * 60 * 60));\r\n\r\n  hours = hours < 10 ? \"0\" + hours : hours;\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n  //return hours + \":\" + minutes + \":\" + seconds;\r\n  return { hours, minutes, seconds };\r\n};\r\n\r\nexport const miliseconds = (hrs, min, sec) => {\r\n  return (\r\n    (parseInt(hrs, 10) * 60 * 60 + parseInt(min, 10) * 60 + parseInt(sec, 10)) *\r\n    1000\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { AddTimerForm } from \"./features/timers/AddTimerForm\";\nimport { TimerList } from \"./features/timers/TimerList\";\n\nconst App = () => {\n  return (\n    <div className=\"center\">\n      <h1 className=\"mg-0 app-name\">tracker</h1>\n      <AddTimerForm />\n      <TimerList />\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport timersReducer from \"../features/timers/timersSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    timers: timersReducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}